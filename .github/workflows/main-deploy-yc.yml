name: Main Deploy PocketCenter

on:
  push:
    branches: ["main"]
    paths:
      - PocketCenter/**
      - .github/workflows/main-deploy-yc.yml
      - .github/workflows/yandex-cloud/docker-compose.yc.yaml
      - .github/workflows/yandex-cloud/user-data.yaml
  workflow_dispatch:

env:
  REGISTRY: cr.yandex/crpsa7b6pi9hgku83m9q
  FACEBODY_IMAGE_NAME: facebody
  USERAUTH_IMAGE_NAME: userauth
  POCKETACTION_IMAGE_NAME: pocketaction
  STREAMING_IMAGE_NAME: streaming
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}${{ github.sha }}

jobs:
  build_and_push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        service:
          [
            { name: FaceBodyFeatureService, tag: facebody },
            { name: UserAuthSessionService, tag: userauth },
            { name: PocketActionService, tag: pocketaction },
            { name: StreamingPlatformService, tag: streaming }
          ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # with:
        #   version: v0.9.1

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_API_KEY }}

      - name: Build, Push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          provenance: false
          file: PocketCenter/${{ matrix.service.name }}/build/run.Dockerfile
          context: PocketCenter/${{ matrix.service.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ matrix.service.tag }}:${{ env.BRANCH_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ matrix.service.tag }}:cache
          cache-to: type=registry,image-manifest=true,oci-mediatypes=true,ref=${{ env.REGISTRY }}/${{ matrix.service.tag }}:cache,mode=max

  build_config_nginx:
    runs-on: self-hosted
    needs: [build_and_push]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.10.0

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_API_KEY }}

      - name: Build, Push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          provenance: false
          file: PocketCenter/nginx/build/run.Dockerfile
          build-args: |
            NGINX_CONF_PATH=./nginx.conf
          context: PocketCenter/nginx
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/pocketnginx:${{ env.BRANCH_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/pocketnginx:cache
          cache-to: type=registry,image-manifest=true,oci-mediatypes=true,ref=${{ env.REGISTRY }}/pocketnginx:cache,mode=max

  update-yc:
    runs-on: self-hosted
    needs: [build_config_nginx]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2
        env:
          POCKETNGINX_IMAGE_TAG: ${{ env.REGISTRY }}/pocketnginx:${{ env.BRANCH_NAME }}
          FACEBODY_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.FACEBODY_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
          USERAUTH_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.USERAUTH_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
          POCKETACTION_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.POCKETACTION_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
          STREAMING_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.STREAMING_IMAGE_NAME }}:${{ env.BRANCH_NAME }}
          YC_VM_USERNAME: ${{ vars.YC_VM_USERNAME }}
          YC_VM_SSH: ${{ vars.YC_VM_SSH }}
          TWITCH_CLIENT_ID : ${{ secrets.TWITCH_CLIENT_ID }}
          TWITCH_CLIENT_SECRET : ${{ secrets.TWITCH_CLIENT_SECRET }}
          APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
          APP_ENV: production
          LOKI_ADDRESS: ${{ secrets.LOKI_ADDRESS }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: pocket-center-prod
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-memory: 2Gb
          vm-core-fraction: 100
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          user-data-path: "./.github/workflows/yandex-cloud/user-data.yaml"
          docker-compose-path: "./.github/workflows/yandex-cloud/docker-compose.yc.yaml"
