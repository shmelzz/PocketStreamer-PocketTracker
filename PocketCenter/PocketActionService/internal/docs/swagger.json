{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/document": {
            "get": {
                "description": "Get global PocketAction document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Get global PocketAction document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SessionId",
                        "name": "SessionId",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PocketAction document",
                        "schema": {
                            "$ref": "#/definitions/model.PocketActionDocument"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/pocketaction": {
            "post": {
                "description": "Trigger Action, send to Composer use websocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Trigger PocketAction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication",
                        "name": "Authentication",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SessionId",
                        "name": "SessionId",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PocketAction request",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PocketAction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Action": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.PocketAction": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.PocketActionDocument": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Action"
                    }
                }
            }
        }
    }
}